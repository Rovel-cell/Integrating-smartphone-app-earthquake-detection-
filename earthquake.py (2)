#include <Wire.h>
#include <MPU6050.h> // Library for the MPU6050 sensor
#include <SoftwareSerial.h>

MPU6050 mpu;
const int threshold = 450; // P-wave detection threshold (4.5 magnitude)
const int speakerPin = 9; // Pin for speaker connection

void setup() {
  Wire.begin();
  Serial.begin(9600);
  pinMode(speakerPin, OUTPUT);

  // Initialize MPU6050
  if (!mpu.begin(MPU6050_SCALE_2000DPS, MPU6050_RANGE_2G)) {
    Serial.println("Could not find a valid MPU6050 sensor, check wiring!");
    while (1);
  }
  mpu.setAccelPowerOnDelay(MPU6050_DELAY_3MS);
  mpu.setIntFreefallEnabled(false);
  mpu.setIntZeroMotionEnabled(false);
  mpu.setDHPFMode(MPU6050_DHPF_5HZ);
}

void loop() {
  Vector rawAccel = mpu.readRawAccel();
  float accelMagnitude = sqrt(sq(rawAccel.XAxis) + sq(rawAccel.YAxis) + sq(rawAccel.ZAxis));

  if (accelMagnitude > threshold) {
    sendSMSAlert();
    playSpeakerAlert();
  }

  delay(1000); // Check every second
}

void sendSMSAlert() {
  // Replace with your Mailgun API code to send SMS alerts
  Serial.println("Sending SMS alert...");
  // Add Mailgun email-to-SMS code here
}

void playSpeakerAlert() {
  Serial.println("Playing speaker alert...");
  tone(speakerPin, 1000); // Play a tone at 1000Hz frequency
  delay(5000); // Duration of alert
  noTone(speakerPin); // Stop tone
}